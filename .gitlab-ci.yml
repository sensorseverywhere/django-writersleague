image: docker:stable

stages:
  - build
  - test
  - deploy

variables:
  IMAGE: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}

build:
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - cd server
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE:latest || true
    - docker build
        --cache-from $IMAGE:latest
        --tag $IMAGE:latest
        --file ./Dockerfile.prod
        --build-arg DEBUG=$DEBUG
        --build-arg SECRET_KEY=$SECRET_KEY
        --build-arg DJANGO_ALLOWED_HOSTS=$DJANGO_ALLOWED_HOSTS
        --build-arg MAILGUN_API_KEY=$MAILGUN_API_KEY
        --build-arg STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY
        --build-arg STRIPE_PUBLISHABLE_KEY=$STRIPE_PUBLISHABLE_KEY
        --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
        --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
        --build-arg AWS_STORAGE_BUCKET_NAME=$AWS_STORAGE_BUCKET_NAME
        "."
    - docker push $IMAGE:latest

test:
  stage: test
  image: $IMAGE:latest
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: users
    POSTGRES_USER: runner
    POSTGRES_PASSWORD: runner
    DATABASE_TEST_URL: postgres://runner:runner@postgres:5432/users
  script:
    - cd server
    - python3.8 -m venv env
    - source env/bin/activate
    - pip install -r requirements.txt
    # - pip install pytest pytest-django
    # - pytest -p no:warnings
    # - python manage.py check --deploy --fail-level=WARNING
deploy:
    stage: deploy
    services:
        - docker:dind
    variables:
        DOCKER_DRIVER: overlay2
        HEROKU_APP_NAME: thewritersleague
        HEROKU_REGISTRY_IMAGE: registry.heroku.com/${HEROKU_APP_NAME}/web
    script:
        - apk add --no-cache curl
        - cd server
        - echo $DJANGO_ALLOWED_HOSTS
        - docker build
            --tag $HEROKU_REGISTRY_IMAGE
            --file ./Dockerfile.prod
            --build-arg DEBUG=$DEBUG
            --build-arg SECRET_KEY=$SECRET_KEY
            --build-arg DJANGO_ALLOWED_HOSTS=$DJANGO_ALLOWED_HOSTS
            --build-arg MAILGUN_API_KEY=$MAILGUN_API_KEY
            --build-arg STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY
            --build-arg STRIPE_PUBLISHABLE_KEY=$STRIPE_PUBLISHABLE_KEY
            --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            --build-arg AWS_STORAGE_BUCKET_NAME=$AWS_STORAGE_BUCKET_NAME
            "."
        - docker login -u _ -p $HEROKU_AUTH_TOKEN registry.heroku.com
        - docker push $HEROKU_REGISTRY_IMAGE
        # - python manage.py createsu
        # - python manage.py loaddata plans.json
        - cd ..
        - chmod +x ./release.sh
        - ./release.sh
        - echo $DEBUG
        - echo $SECRET_KEY
        - echo $DJANGO_ALLOWED_HOSTS
        - echo $MAILGUN_API_KEY
        - echo $STRIPE_SECRET_KEY
        - echo $STRIPE_PUBLISHABLE_KEY
        - echo $AWS_ACCESS_KEY_ID
        - echo $AWS_SECRET_ACCESS_KEY
        - echo $AWS_STORAGE_BUCKET_NAME